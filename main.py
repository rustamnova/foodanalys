import logging
import os
from aiogram import Bot, Dispatcher, F, types
from aiogram.types import FSInputFile
from aiogram.enums import ParseMode
from aiogram.utils.markdown import hbold
from aiogram.types import Message
from aiogram import Router
from aiogram.filters import CommandStart
from openai import OpenAI
from dotenv import load_dotenv

load_dotenv()

# Init API keys
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# Init OpenAI client
client = OpenAI(api_key=OPENAI_API_KEY)

# Init Telegram bot
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)

logging.basicConfig(level=logging.INFO)

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ —Å–æ—Å—Ç–∞–≤–∞ –ø—Ä–æ–¥—É–∫—Ç–∞, –∏ —è –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É—é –µ–≥–æ.")

@router.message(F.photo)
async def handle_photo(message: Message):
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∏–±–æ–ª—å—à–µ–µ –ø–æ —Ä–∞–∑–º–µ—Ä—É —Ñ–æ—Ç–æ
    photo = message.photo[-1]
    file = await bot.get_file(photo.file_id)
    file_path = file.file_path

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
    photo_bytes = await bot.download_file(file_path)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ GPT Vision
    gpt_response = client.chat.completions.create(
        model="gpt-4-vision-preview",
        messages=[
            {"role": "system", "content": "–¢—ã –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ—Å—Ç–∞–≤ –ø—Ä–æ–¥—É–∫—Ç–∞, –Ω–∞–π–¥–∏ –≤—Ä–µ–¥–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞, –¥–æ–±–∞–≤–∫–∏ –∏ –∞–ª–ª–µ—Ä–≥–µ–Ω—ã. –ö—Ä–∞—Ç–∫–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ."},
            {
                "role": "user",
                "content": [
                    {"type": "image_url", "image_url": {"url": f"data:image/jpeg;base64,{photo_bytes.read().encode('base64').decode()}", "detail": "low"}}
                ]
            }
        ],
        max_tokens=1000
    )

    result = gpt_response.choices[0].message.content
    await message.answer(f"üìã –í–æ—Ç –∞–Ω–∞–ª–∏–∑ —Å–æ—Å—Ç–∞–≤–∞:\n\n{result}", parse_mode=ParseMode.MARKDOWN)

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
